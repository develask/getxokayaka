var mongodb = require("mongodb");
var crypto = require('crypto');
var flickr = require('flickr.js');
var MongoClient = mongodb.MongoClient;
var ObjectID = mongodb.ObjectID;

var collection;
var mongourl = "mongodb://getxo:web@ds123146.mlab.com:23146/getxokayaka";
MongoClient.connect(mongourl, function(err, db) {
	if(err) { return console.dir(err); }
    noticias = db.collection('noticias');
    actividades = db.collection('actividades');
    users = db.collection('users');
    console.log("conected: mongodb");
});
function findOne(hizk,id, where, callback){
    var coll = {
        "noticias": noticias,
        "actividades": actividades
    }
    var ob = '{"html_'+hizk+'": 1, "img": 1, "title_'+hizk+'":1, "text_'+hizk+'":1, "date":1, "tags": 1, "users": 1}';

    coll[where].findOne({"_id": new ObjectID(id)}, JSON.parse(ob), callback);
}
function count(hizk,section, text, callback){
    var coll = {
        "noticias": noticias,
        "actividades": actividades
    }
    var ob1= "{\"title_"+hizk+"\": \"d\"}";
    var ob2 = "{\"html_"+hizk+"\": \"d\"}";
    ob1 = JSON.parse(ob1);
    ob2 = JSON.parse(ob2);
    ob1["title_"+hizk] = {'$regex': text||"", "$options" : "-i"}
    ob2["html_"+hizk] = {'$regex': text||"", "$options" : "-i"}
    coll[section].count({
        $or:[ob1,ob2]
    }, callback);
}
function find(text, options, callback){
    if (!options){
        options = {};
    }
    var coll = {
        "noticias": noticias,
        "actividades": actividades
    }
    var ob1= "{\"title_"+options.hizkuntza+"\": \"d\"}";
    var ob2 = "{\"html_"+options.hizkuntza+"\": \"d\"}";
    ob1 = JSON.parse(ob1);
    ob2 = JSON.parse(ob2);
    ob1["title_"+options.hizkuntza] = {'$regex': text||"", "$options" : "-i"};
    ob2["html_"+options.hizkuntza] = {'$regex': text||"", "$options" : "-i"};
    coll[options.collection].find({
        $or:[ob1,ob2, {"tags": { $in: [text] }}]
    }, {} , {
        "limit": options.limit || 5,
        "skip": options.skip>0?options.skip:0,
        "sort": [["date", "desc"]],
    }).toArray(callback);
}
function bilaketa(hizk, zer, orrialdea, callback){
    find(zer, {"collection": "noticias", "hizkuntza": hizk, "limit": 9, "skip": (orrialdea?((orrialdea-1)*9):0)}, function(err, d1){
        find(zer, {"collection": "actividades", "hizkuntza": hizk, "limit": 9, "skip": (orrialdea?((orrialdea-1)*9):0)}, function(err2, d2){
            if (err || err2) callback("mierda", undefined);
            var juntar = d1;
            for (el in d2){
                d2[el]["is"] = "actividad";
                juntar.push(d2[el]);
            }
            juntar.sort(function(a,b){return b["date"] - a["date"]});
            callback(err, juntar);
        });
    });
}
function inicio(hizk,callback){
    var ob = '{"date":1, "title_'+hizk+'": 1, "text_'+hizk+'": 1, "img": 1}';
    var rob = JSON.parse(ob);
    noticias.find({}, rob,{
        "limit": 3,
        "sort": [["date", "desc"]]
    }).toArray(function(err, data){
        if (err){
            callback(err, data);
        }else {
            actividades.find({}, rob,{
                "limit": 3,
                "sort": [["date", "desc"]]
            }).toArray(function(err,data2){
                if (err){
                    callback(err, data);
                }else{
                    flickr.api.photosets.getList({user_id: "124698999@N02", "page": 1, "per_page": 3},function(data3){
                        var juntar = data;
                        for (el in data2){
                            data2[el]["is"] = "actividad";
                            juntar.push(data2[el]);
                        }
                        juntar.sort(function(a,b){return b["date"] - a["date"]});
                        var todo ={"noticias": juntar.slice(0, 3), "fotos": data3};
                        callback(err, todo);
                    });
                }
            });
        }
    });
}
function user(user, pass ,callback){
    users.find({"name": user}, {"_id": 1}, function(err, data){
        if (data){
            data.toArray(function (err ,data){
                if (data.length > 0){
                    var hashak = [];
                    for (var el = 0; el < data.length; el++){
                         var h = crypto.createHash('sha512');
                         h.update(pass);
                         h.update((data[el]['_id']).toString());
                         var passhash = h.digest('base64');
                         hashak.push(passhash);
                     }
                    users.findOne({"name": user, "pass": { $in: hashak }},{"pass":0}, function (err, user){
                        if (user){
                            callback(err, user);
                        }else{
                            callback(function(){this.message=query + " not found"; this.name="password error"});
                        }
                    });
                }else{
                    callback(function(){this.message=query + " not found"; this.name="user error"});
                }
            });
        }else{
            callback(function(){this.message=query + " not found"; this.name="user error"});
        }
    });
}
function permiso(id, ob ,callback){
    var q = {"_id":0};
    q[ob] = 1;
    users.findOne({"_id": new ObjectID(id)},q,callback);
}
function remove(id, section, callback){
    var coll = {
        "users": users,
        "noticias": noticias,
        "actividades": actividades
    }
    coll[section].remove({"_id": new ObjectID(id)}, callback);
}
function update(id, section, ob, callback){
    var coll = {
        "users": users,
        "noticias": noticias,
        "actividades": actividades,
    }
    if (section=="users"){
        if (ob['pass']){
            var h = crypto.createHash('sha512');
             h.update(ob['pass']);
             h.update(id);
             var passhash = h.digest('base64');
            ob['pass']=passhash;
        }
        coll[section].update({"_id": new ObjectID(id)},{$set:ob},{ upsert: (section=="users")?false:true}, callback);
    }else{
        coll[section].update({"_id": new ObjectID(id)},ob,{ upsert: (section=="users")?false:true}, callback);
    }
}
function nuevo(section, ob, callback){
    var coll = {
        "users": users,
        "noticias": noticias,
        "actividades": actividades
    }
    if (section=="users"){
        if (ob['pass']){
            var pw = ob['pass']
            delete ob['pass'];
            coll[section].insert(ob, function(err,data){
                if (err){
                    callback(function(){this.message=query + " not found"; this.name="password error"});
                }else{
                    var h = crypto.createHash('sha512');
                    h.update(pw);
                    h.update(""+data[0]['_id']);
                    var passhash = h.digest('base64');
                    ob = {'pass': passhash};
                    users.update({"_id": new ObjectID(""+data[0]['_id'])},{$set:ob},{ upsert: false}, callback);
                }
            });
        }else{
            callback(function(){this.message=query + " not found"; this.name="password error"});
        }
    }else{
        coll[section].insert(ob, callback);
    }
}
function listUsers(cb){
    return users.find({}, {"_id": 1, "name":1}).toArray(cb);
}
function getUserById(id, cb){
    users.findOne({"_id": new ObjectID(id)}, {"pass": 0}, function (err, user){
        if (user){
            cb(err, user);
        }else{
            cb(function(){this.message=query + " not found"; this.name="password error"});
        }
    });
}
function encode(name){
     var h = crypto.createHash('sha512');
     h.update(name);
     h.update(Date.now()+"");
    return h.digest('base64');
}
function collectEditInfo(callback){
    var ob = '{"date":1, "title_es": 1, "_id": 1}';
    var rob = JSON.parse(ob);
    noticias.find({}, rob,{
        "limit": 6,
        "sort": [["date", "desc"]]
    }).toArray(function(err, data){
        if (err){
            callback(err, data);
        }else {
            actividades.find({}, rob,{
                "limit": 6,
                "sort": [["date", "desc"]]
            }).toArray(function(err,data2){
                if (err){
                    callback(err, data);
                }else{
                    var todo ={"noticias": data, "actividades": data2};
                    callback(err, todo);
                }
            });
        }
    });
}
function sitemap(callback){
    var ob = '{"_id": 1}';
    var rob = JSON.parse(ob);
    noticias.find({}, rob,{
        "limit": 10,
        "sort": [["date", "desc"]]
    }).toArray(function(err, data){
        if (err){
            callback(err, data);
        }else {
            actividades.find({}, rob,{
                "limit": 10,
                "sort": [["date", "desc"]]
            }).toArray(function(err,data2){
                if (err){
                    callback(err, data);
                }else{
                    flickr.api.photosets.getList({user_id: "124698999@N02", "page": 1, "per_page": 3},function(data3){
                        var todo ={"noticias": data, "actividades": data2, "fotos": data3};
                        callback(err, todo);
                    });
                }
            });
        }
    });
}
module.exports.findOne = findOne;
module.exports.find = find;
module.exports.inicio = inicio;
module.exports.user = user;
module.exports.permiso = permiso;
module.exports.remove = remove;
module.exports.update = update;
module.exports.nuevo = nuevo;
module.exports.count = count;
module.exports.bilaketa = bilaketa;
module.exports.listUsers = listUsers;
module.exports.getUserById = getUserById;
module.exports.flickr = flickr;
module.exports.encode = encode;
module.exports.collectEditInfo = collectEditInfo;
module.exports.sitemap = sitemap;
